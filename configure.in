AC_INIT
AC_CONFIG_HEADER(config.h)

dnl Define the release numbers here

SETUPDB_VERSION_MAJOR=1
SETUPDB_VERSION_MINOR=6
SETUPDB_VERSION_RELEASE=1

PACKAGE_NAME="Loki Setup DataBase Library"
PACKAGE_TARNAME="setupdb"
PACKAGE_VERSION="$SETUPDB_VERSION_MAJOR.$SETUPDB_VERSION_MINOR.$SETUPDB_VERSION_RELEASE"
PACKAGE_STRING="$PACKAGE_NAME v$PACKAGE_VERSION"

CFLAGS="-fsigned-char -Wall -g -O2 -I. -D_REENTRANT"

dnl Detect the canonical host and target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AC_PROG_CC
AC_PROG_MAKE_SET

AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(strings.h)
AC_CHECK_HEADERS(sys/utsname.h)
AC_CHECK_HEADERS(sys/sysmacros.h)
AC_CHECK_HEADERS(sys/mkdev.h)
AC_CHECK_HEADERS(glob.h)
AC_CHECK_HEADERS(elf.h)

AC_CHECK_FUNCS(setenv)
AC_CHECK_FUNCS(unsetenv)

dnl Set the architecture flag
case "$target" in
    *i?86*OpenUNIX* | *i?86*sco*)
	CFLAGS="$CFLAGS -Dsco"
	ARCH=x86 ;;
    *i?86*)
        ARCH=x86 ;;
    hppa*)
	CFLAGS="$CFLAGS -I/opt/zlib/include"
	ARCH=hppa ;;
    *sgi*)
	ARCH=mips ;;
    powerpc-apple-darwin*)
	CFLAGS="-Ddarwin"
	ARCH=ppc ;;
    *ppc* | *powerpc*)
        ARCH=ppc ;;
    *)
        ARCH=`uname -p 2> /dev/null || uname -m`
	if test "$ARCH" = powerpc; then
		ARCH=ppc
	fi
	;;
esac

dnl Add architecture-specific compile flags
case "$target" in
    alpha*-*-linux*)
        if test x$ac_cv_c_compiler_gnu = xyes; then
            CFLAGS="$CFLAGS -mcpu=ev4 -Wa,-mall"
        fi
        ;;
esac


AC_SUBST(ARCH)
AC_SUBST(SETUPDB_VERSION_MAJOR)
AC_SUBST(SETUPDB_VERSION_MINOR)
AC_SUBST(SETUPDB_VERSION_RELEASE)

dnl Look for the XML libraries

AC_PATH_PROG(HAVEXML, xml-config, $PATH)
if test ! -z "$HAVEXML"; then
    XML_CFLAGS=`$HAVEXML --cflags`
    XML_LIBS=`$HAVEXML --libs`

    CFLAGS="$CFLAGS $XML_CFLAGS"
    LIBS="$LIBS $XML_LIBS"
else
    AC_MSG_ERROR([*** xml-config not found. You need a working libxml installation.])
fi

AC_ARG_WITH(vendor,
[  --with-vendor           with specified vendor prefix  [default=codehost]], 
	,   with_vendor=codehost)
if test x$with_vendor != xcodehost; then
        CFLAGS="$CFLAGS -DLOKI_PREFIX=\\\"$with_vendor\\\""
fi

AC_ARG_WITH(image,
[  --with-image            specifiy the image path  [default=../../spp/private/clpack]], 
	,   with_image=../../spp/private/clpack)
IMAGE="$with_image"


AC_SUBST(IMAGE)
AC_OUTPUT(Makefile)
